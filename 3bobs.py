'''
У нас есть три гирьки без веса. И есть весы, которые могут сравнить вес двух гирек. 
На вход даны результаты взвешивания, нужно расположить гирьки по возрастанию веса.
Выдать слово "Противоречивые данные", если ошибка взвешиваний.
Выдать слово "Нехватка данных" если не хватает взвешиваний для определения.
Среди гирь нет одинаковых по весу.
'''

#Создаём список, хранящий результаты взвешиваний
inArray = ['C>B', 'C>A', 'A>B', 'A>B']


def bobs(inArray):
    #Создаём списки, которые будут хранить индикаторы и обозначение гирьки.
    #Первый индикатор показывает, что данная гирька по весу больше одной из двух других
    #Второй индикатор показывает, что данная гирька по весу меньше одной из двух других
    #Список для ответа заполняем нулями вместо обозначений гирек.
    A, B, C, answer = [0, 0, 'A'], [0, 0, 'B'], [0, 0, 'C'], [0, 0, 0]
    for checkString in inArray:
        if '>' in checkString:
            if checkString[0] == 'A': A[0] = 1
            elif checkString[0] == 'B': B[0] = 1
            else: C[0] = 1

            if checkString[2] == 'A': A[1] = 1
            elif checkString[2] == 'B': B[1] = 1
            else: C[1] = 1
        elif '<' in checkString:
            if checkString[0] == 'A': A[1] = 1
            elif checkString[0] == 'B': B[1] = 1
            else: C[1] = 1

            if checkString[2] == 'A': A[0] = 1
            elif checkString[2] == 'B': B[0] = 1
            else: C[0] = 1
        else:
            print('Wrong data')  # если в исходном массиве данные не соответствуют требованиям
    #К этому моменту взвешивания обработаны и нужно заполнить список answer для сортировки гирек по весу.
    for i in A, B, C:
        if i[0] == 1:
            if i[1] == 0: answer[0] = i[2]  #[1, 0] - гирька самая тяжёлая
            else: answer[1] = i[2]  #[1, 1] - гирька среднего веса
        else:
            answer[2] = i[2]  # [0, 1] - гирька самая лёгкая
    # Если какой-то элемент списка равен 0 - это ошибка.
    if 0 in answer:
        # отсутсвует средняя гирька - значит мы не узнали соотношение гирек между собой.
        if [1, 1] not in answer:
            print('Нехватка данных')
        else:
            # Если в списке средняя гирька есть, значит у нас вышло так, что две гирьки имеют одинаковые индикаторы, что противоречит условию
            print('Противоречивые данные')
    print(answer)
